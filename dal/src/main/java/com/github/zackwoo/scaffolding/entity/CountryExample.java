package com.github.zackwoo.scaffolding.entity;

import java.util.ArrayList;
import java.util.List;

public class CountryExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table COUNTRY
     *
     * @mbg.generated Tue Apr 11 18:53:02 CST 2017
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table COUNTRY
     *
     * @mbg.generated Tue Apr 11 18:53:02 CST 2017
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table COUNTRY
     *
     * @mbg.generated Tue Apr 11 18:53:02 CST 2017
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table COUNTRY
     *
     * @mbg.generated Tue Apr 11 18:53:02 CST 2017
     */
    public CountryExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table COUNTRY
     *
     * @mbg.generated Tue Apr 11 18:53:02 CST 2017
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table COUNTRY
     *
     * @mbg.generated Tue Apr 11 18:53:02 CST 2017
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table COUNTRY
     *
     * @mbg.generated Tue Apr 11 18:53:02 CST 2017
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table COUNTRY
     *
     * @mbg.generated Tue Apr 11 18:53:02 CST 2017
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table COUNTRY
     *
     * @mbg.generated Tue Apr 11 18:53:02 CST 2017
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table COUNTRY
     *
     * @mbg.generated Tue Apr 11 18:53:02 CST 2017
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table COUNTRY
     *
     * @mbg.generated Tue Apr 11 18:53:02 CST 2017
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table COUNTRY
     *
     * @mbg.generated Tue Apr 11 18:53:02 CST 2017
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table COUNTRY
     *
     * @mbg.generated Tue Apr 11 18:53:02 CST 2017
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table COUNTRY
     *
     * @mbg.generated Tue Apr 11 18:53:02 CST 2017
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table COUNTRY
     *
     * @mbg.generated Tue Apr 11 18:53:02 CST 2017
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andCodeIsNull() {
            addCriterion("CODE is null");
            return (Criteria) this;
        }

        public Criteria andCodeIsNotNull() {
            addCriterion("CODE is not null");
            return (Criteria) this;
        }

        public Criteria andCodeEqualTo(String value) {
            addCriterion("CODE =", value, "code");
            return (Criteria) this;
        }

        public Criteria andCodeNotEqualTo(String value) {
            addCriterion("CODE <>", value, "code");
            return (Criteria) this;
        }

        public Criteria andCodeGreaterThan(String value) {
            addCriterion("CODE >", value, "code");
            return (Criteria) this;
        }

        public Criteria andCodeGreaterThanOrEqualTo(String value) {
            addCriterion("CODE >=", value, "code");
            return (Criteria) this;
        }

        public Criteria andCodeLessThan(String value) {
            addCriterion("CODE <", value, "code");
            return (Criteria) this;
        }

        public Criteria andCodeLessThanOrEqualTo(String value) {
            addCriterion("CODE <=", value, "code");
            return (Criteria) this;
        }

        public Criteria andCodeLike(String value) {
            addCriterion("CODE like", value, "code");
            return (Criteria) this;
        }

        public Criteria andCodeNotLike(String value) {
            addCriterion("CODE not like", value, "code");
            return (Criteria) this;
        }

        public Criteria andCodeIn(List<String> values) {
            addCriterion("CODE in", values, "code");
            return (Criteria) this;
        }

        public Criteria andCodeNotIn(List<String> values) {
            addCriterion("CODE not in", values, "code");
            return (Criteria) this;
        }

        public Criteria andCodeBetween(String value1, String value2) {
            addCriterion("CODE between", value1, value2, "code");
            return (Criteria) this;
        }

        public Criteria andCodeNotBetween(String value1, String value2) {
            addCriterion("CODE not between", value1, value2, "code");
            return (Criteria) this;
        }

        public Criteria andNameIsNull() {
            addCriterion("`NAME` is null");
            return (Criteria) this;
        }

        public Criteria andNameIsNotNull() {
            addCriterion("`NAME` is not null");
            return (Criteria) this;
        }

        public Criteria andNameEqualTo(String value) {
            addCriterion("`NAME` =", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameNotEqualTo(String value) {
            addCriterion("`NAME` <>", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameGreaterThan(String value) {
            addCriterion("`NAME` >", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameGreaterThanOrEqualTo(String value) {
            addCriterion("`NAME` >=", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameLessThan(String value) {
            addCriterion("`NAME` <", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameLessThanOrEqualTo(String value) {
            addCriterion("`NAME` <=", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameLike(String value) {
            addCriterion("`NAME` like", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameNotLike(String value) {
            addCriterion("`NAME` not like", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameIn(List<String> values) {
            addCriterion("`NAME` in", values, "name");
            return (Criteria) this;
        }

        public Criteria andNameNotIn(List<String> values) {
            addCriterion("`NAME` not in", values, "name");
            return (Criteria) this;
        }

        public Criteria andNameBetween(String value1, String value2) {
            addCriterion("`NAME` between", value1, value2, "name");
            return (Criteria) this;
        }

        public Criteria andNameNotBetween(String value1, String value2) {
            addCriterion("`NAME` not between", value1, value2, "name");
            return (Criteria) this;
        }

        public Criteria andContinentIsNull() {
            addCriterion("CONTINENT is null");
            return (Criteria) this;
        }

        public Criteria andContinentIsNotNull() {
            addCriterion("CONTINENT is not null");
            return (Criteria) this;
        }

        public Criteria andContinentEqualTo(String value) {
            addCriterion("CONTINENT =", value, "continent");
            return (Criteria) this;
        }

        public Criteria andContinentNotEqualTo(String value) {
            addCriterion("CONTINENT <>", value, "continent");
            return (Criteria) this;
        }

        public Criteria andContinentGreaterThan(String value) {
            addCriterion("CONTINENT >", value, "continent");
            return (Criteria) this;
        }

        public Criteria andContinentGreaterThanOrEqualTo(String value) {
            addCriterion("CONTINENT >=", value, "continent");
            return (Criteria) this;
        }

        public Criteria andContinentLessThan(String value) {
            addCriterion("CONTINENT <", value, "continent");
            return (Criteria) this;
        }

        public Criteria andContinentLessThanOrEqualTo(String value) {
            addCriterion("CONTINENT <=", value, "continent");
            return (Criteria) this;
        }

        public Criteria andContinentLike(String value) {
            addCriterion("CONTINENT like", value, "continent");
            return (Criteria) this;
        }

        public Criteria andContinentNotLike(String value) {
            addCriterion("CONTINENT not like", value, "continent");
            return (Criteria) this;
        }

        public Criteria andContinentIn(List<String> values) {
            addCriterion("CONTINENT in", values, "continent");
            return (Criteria) this;
        }

        public Criteria andContinentNotIn(List<String> values) {
            addCriterion("CONTINENT not in", values, "continent");
            return (Criteria) this;
        }

        public Criteria andContinentBetween(String value1, String value2) {
            addCriterion("CONTINENT between", value1, value2, "continent");
            return (Criteria) this;
        }

        public Criteria andContinentNotBetween(String value1, String value2) {
            addCriterion("CONTINENT not between", value1, value2, "continent");
            return (Criteria) this;
        }

        public Criteria andRegionIsNull() {
            addCriterion("REGION is null");
            return (Criteria) this;
        }

        public Criteria andRegionIsNotNull() {
            addCriterion("REGION is not null");
            return (Criteria) this;
        }

        public Criteria andRegionEqualTo(String value) {
            addCriterion("REGION =", value, "region");
            return (Criteria) this;
        }

        public Criteria andRegionNotEqualTo(String value) {
            addCriterion("REGION <>", value, "region");
            return (Criteria) this;
        }

        public Criteria andRegionGreaterThan(String value) {
            addCriterion("REGION >", value, "region");
            return (Criteria) this;
        }

        public Criteria andRegionGreaterThanOrEqualTo(String value) {
            addCriterion("REGION >=", value, "region");
            return (Criteria) this;
        }

        public Criteria andRegionLessThan(String value) {
            addCriterion("REGION <", value, "region");
            return (Criteria) this;
        }

        public Criteria andRegionLessThanOrEqualTo(String value) {
            addCriterion("REGION <=", value, "region");
            return (Criteria) this;
        }

        public Criteria andRegionLike(String value) {
            addCriterion("REGION like", value, "region");
            return (Criteria) this;
        }

        public Criteria andRegionNotLike(String value) {
            addCriterion("REGION not like", value, "region");
            return (Criteria) this;
        }

        public Criteria andRegionIn(List<String> values) {
            addCriterion("REGION in", values, "region");
            return (Criteria) this;
        }

        public Criteria andRegionNotIn(List<String> values) {
            addCriterion("REGION not in", values, "region");
            return (Criteria) this;
        }

        public Criteria andRegionBetween(String value1, String value2) {
            addCriterion("REGION between", value1, value2, "region");
            return (Criteria) this;
        }

        public Criteria andRegionNotBetween(String value1, String value2) {
            addCriterion("REGION not between", value1, value2, "region");
            return (Criteria) this;
        }

        public Criteria andSurfaceareaIsNull() {
            addCriterion("SURFACEAREA is null");
            return (Criteria) this;
        }

        public Criteria andSurfaceareaIsNotNull() {
            addCriterion("SURFACEAREA is not null");
            return (Criteria) this;
        }

        public Criteria andSurfaceareaEqualTo(Double value) {
            addCriterion("SURFACEAREA =", value, "surfacearea");
            return (Criteria) this;
        }

        public Criteria andSurfaceareaNotEqualTo(Double value) {
            addCriterion("SURFACEAREA <>", value, "surfacearea");
            return (Criteria) this;
        }

        public Criteria andSurfaceareaGreaterThan(Double value) {
            addCriterion("SURFACEAREA >", value, "surfacearea");
            return (Criteria) this;
        }

        public Criteria andSurfaceareaGreaterThanOrEqualTo(Double value) {
            addCriterion("SURFACEAREA >=", value, "surfacearea");
            return (Criteria) this;
        }

        public Criteria andSurfaceareaLessThan(Double value) {
            addCriterion("SURFACEAREA <", value, "surfacearea");
            return (Criteria) this;
        }

        public Criteria andSurfaceareaLessThanOrEqualTo(Double value) {
            addCriterion("SURFACEAREA <=", value, "surfacearea");
            return (Criteria) this;
        }

        public Criteria andSurfaceareaIn(List<Double> values) {
            addCriterion("SURFACEAREA in", values, "surfacearea");
            return (Criteria) this;
        }

        public Criteria andSurfaceareaNotIn(List<Double> values) {
            addCriterion("SURFACEAREA not in", values, "surfacearea");
            return (Criteria) this;
        }

        public Criteria andSurfaceareaBetween(Double value1, Double value2) {
            addCriterion("SURFACEAREA between", value1, value2, "surfacearea");
            return (Criteria) this;
        }

        public Criteria andSurfaceareaNotBetween(Double value1, Double value2) {
            addCriterion("SURFACEAREA not between", value1, value2, "surfacearea");
            return (Criteria) this;
        }

        public Criteria andIndepyearIsNull() {
            addCriterion("INDEPYEAR is null");
            return (Criteria) this;
        }

        public Criteria andIndepyearIsNotNull() {
            addCriterion("INDEPYEAR is not null");
            return (Criteria) this;
        }

        public Criteria andIndepyearEqualTo(Short value) {
            addCriterion("INDEPYEAR =", value, "indepyear");
            return (Criteria) this;
        }

        public Criteria andIndepyearNotEqualTo(Short value) {
            addCriterion("INDEPYEAR <>", value, "indepyear");
            return (Criteria) this;
        }

        public Criteria andIndepyearGreaterThan(Short value) {
            addCriterion("INDEPYEAR >", value, "indepyear");
            return (Criteria) this;
        }

        public Criteria andIndepyearGreaterThanOrEqualTo(Short value) {
            addCriterion("INDEPYEAR >=", value, "indepyear");
            return (Criteria) this;
        }

        public Criteria andIndepyearLessThan(Short value) {
            addCriterion("INDEPYEAR <", value, "indepyear");
            return (Criteria) this;
        }

        public Criteria andIndepyearLessThanOrEqualTo(Short value) {
            addCriterion("INDEPYEAR <=", value, "indepyear");
            return (Criteria) this;
        }

        public Criteria andIndepyearIn(List<Short> values) {
            addCriterion("INDEPYEAR in", values, "indepyear");
            return (Criteria) this;
        }

        public Criteria andIndepyearNotIn(List<Short> values) {
            addCriterion("INDEPYEAR not in", values, "indepyear");
            return (Criteria) this;
        }

        public Criteria andIndepyearBetween(Short value1, Short value2) {
            addCriterion("INDEPYEAR between", value1, value2, "indepyear");
            return (Criteria) this;
        }

        public Criteria andIndepyearNotBetween(Short value1, Short value2) {
            addCriterion("INDEPYEAR not between", value1, value2, "indepyear");
            return (Criteria) this;
        }

        public Criteria andPopulationIsNull() {
            addCriterion("POPULATION is null");
            return (Criteria) this;
        }

        public Criteria andPopulationIsNotNull() {
            addCriterion("POPULATION is not null");
            return (Criteria) this;
        }

        public Criteria andPopulationEqualTo(Integer value) {
            addCriterion("POPULATION =", value, "population");
            return (Criteria) this;
        }

        public Criteria andPopulationNotEqualTo(Integer value) {
            addCriterion("POPULATION <>", value, "population");
            return (Criteria) this;
        }

        public Criteria andPopulationGreaterThan(Integer value) {
            addCriterion("POPULATION >", value, "population");
            return (Criteria) this;
        }

        public Criteria andPopulationGreaterThanOrEqualTo(Integer value) {
            addCriterion("POPULATION >=", value, "population");
            return (Criteria) this;
        }

        public Criteria andPopulationLessThan(Integer value) {
            addCriterion("POPULATION <", value, "population");
            return (Criteria) this;
        }

        public Criteria andPopulationLessThanOrEqualTo(Integer value) {
            addCriterion("POPULATION <=", value, "population");
            return (Criteria) this;
        }

        public Criteria andPopulationIn(List<Integer> values) {
            addCriterion("POPULATION in", values, "population");
            return (Criteria) this;
        }

        public Criteria andPopulationNotIn(List<Integer> values) {
            addCriterion("POPULATION not in", values, "population");
            return (Criteria) this;
        }

        public Criteria andPopulationBetween(Integer value1, Integer value2) {
            addCriterion("POPULATION between", value1, value2, "population");
            return (Criteria) this;
        }

        public Criteria andPopulationNotBetween(Integer value1, Integer value2) {
            addCriterion("POPULATION not between", value1, value2, "population");
            return (Criteria) this;
        }

        public Criteria andLifeexpectancyIsNull() {
            addCriterion("LIFEEXPECTANCY is null");
            return (Criteria) this;
        }

        public Criteria andLifeexpectancyIsNotNull() {
            addCriterion("LIFEEXPECTANCY is not null");
            return (Criteria) this;
        }

        public Criteria andLifeexpectancyEqualTo(Double value) {
            addCriterion("LIFEEXPECTANCY =", value, "lifeexpectancy");
            return (Criteria) this;
        }

        public Criteria andLifeexpectancyNotEqualTo(Double value) {
            addCriterion("LIFEEXPECTANCY <>", value, "lifeexpectancy");
            return (Criteria) this;
        }

        public Criteria andLifeexpectancyGreaterThan(Double value) {
            addCriterion("LIFEEXPECTANCY >", value, "lifeexpectancy");
            return (Criteria) this;
        }

        public Criteria andLifeexpectancyGreaterThanOrEqualTo(Double value) {
            addCriterion("LIFEEXPECTANCY >=", value, "lifeexpectancy");
            return (Criteria) this;
        }

        public Criteria andLifeexpectancyLessThan(Double value) {
            addCriterion("LIFEEXPECTANCY <", value, "lifeexpectancy");
            return (Criteria) this;
        }

        public Criteria andLifeexpectancyLessThanOrEqualTo(Double value) {
            addCriterion("LIFEEXPECTANCY <=", value, "lifeexpectancy");
            return (Criteria) this;
        }

        public Criteria andLifeexpectancyIn(List<Double> values) {
            addCriterion("LIFEEXPECTANCY in", values, "lifeexpectancy");
            return (Criteria) this;
        }

        public Criteria andLifeexpectancyNotIn(List<Double> values) {
            addCriterion("LIFEEXPECTANCY not in", values, "lifeexpectancy");
            return (Criteria) this;
        }

        public Criteria andLifeexpectancyBetween(Double value1, Double value2) {
            addCriterion("LIFEEXPECTANCY between", value1, value2, "lifeexpectancy");
            return (Criteria) this;
        }

        public Criteria andLifeexpectancyNotBetween(Double value1, Double value2) {
            addCriterion("LIFEEXPECTANCY not between", value1, value2, "lifeexpectancy");
            return (Criteria) this;
        }

        public Criteria andGnpIsNull() {
            addCriterion("GNP is null");
            return (Criteria) this;
        }

        public Criteria andGnpIsNotNull() {
            addCriterion("GNP is not null");
            return (Criteria) this;
        }

        public Criteria andGnpEqualTo(Double value) {
            addCriterion("GNP =", value, "gnp");
            return (Criteria) this;
        }

        public Criteria andGnpNotEqualTo(Double value) {
            addCriterion("GNP <>", value, "gnp");
            return (Criteria) this;
        }

        public Criteria andGnpGreaterThan(Double value) {
            addCriterion("GNP >", value, "gnp");
            return (Criteria) this;
        }

        public Criteria andGnpGreaterThanOrEqualTo(Double value) {
            addCriterion("GNP >=", value, "gnp");
            return (Criteria) this;
        }

        public Criteria andGnpLessThan(Double value) {
            addCriterion("GNP <", value, "gnp");
            return (Criteria) this;
        }

        public Criteria andGnpLessThanOrEqualTo(Double value) {
            addCriterion("GNP <=", value, "gnp");
            return (Criteria) this;
        }

        public Criteria andGnpIn(List<Double> values) {
            addCriterion("GNP in", values, "gnp");
            return (Criteria) this;
        }

        public Criteria andGnpNotIn(List<Double> values) {
            addCriterion("GNP not in", values, "gnp");
            return (Criteria) this;
        }

        public Criteria andGnpBetween(Double value1, Double value2) {
            addCriterion("GNP between", value1, value2, "gnp");
            return (Criteria) this;
        }

        public Criteria andGnpNotBetween(Double value1, Double value2) {
            addCriterion("GNP not between", value1, value2, "gnp");
            return (Criteria) this;
        }

        public Criteria andGnpoldIsNull() {
            addCriterion("GNPOLD is null");
            return (Criteria) this;
        }

        public Criteria andGnpoldIsNotNull() {
            addCriterion("GNPOLD is not null");
            return (Criteria) this;
        }

        public Criteria andGnpoldEqualTo(Double value) {
            addCriterion("GNPOLD =", value, "gnpold");
            return (Criteria) this;
        }

        public Criteria andGnpoldNotEqualTo(Double value) {
            addCriterion("GNPOLD <>", value, "gnpold");
            return (Criteria) this;
        }

        public Criteria andGnpoldGreaterThan(Double value) {
            addCriterion("GNPOLD >", value, "gnpold");
            return (Criteria) this;
        }

        public Criteria andGnpoldGreaterThanOrEqualTo(Double value) {
            addCriterion("GNPOLD >=", value, "gnpold");
            return (Criteria) this;
        }

        public Criteria andGnpoldLessThan(Double value) {
            addCriterion("GNPOLD <", value, "gnpold");
            return (Criteria) this;
        }

        public Criteria andGnpoldLessThanOrEqualTo(Double value) {
            addCriterion("GNPOLD <=", value, "gnpold");
            return (Criteria) this;
        }

        public Criteria andGnpoldIn(List<Double> values) {
            addCriterion("GNPOLD in", values, "gnpold");
            return (Criteria) this;
        }

        public Criteria andGnpoldNotIn(List<Double> values) {
            addCriterion("GNPOLD not in", values, "gnpold");
            return (Criteria) this;
        }

        public Criteria andGnpoldBetween(Double value1, Double value2) {
            addCriterion("GNPOLD between", value1, value2, "gnpold");
            return (Criteria) this;
        }

        public Criteria andGnpoldNotBetween(Double value1, Double value2) {
            addCriterion("GNPOLD not between", value1, value2, "gnpold");
            return (Criteria) this;
        }

        public Criteria andLocalnameIsNull() {
            addCriterion("LOCALNAME is null");
            return (Criteria) this;
        }

        public Criteria andLocalnameIsNotNull() {
            addCriterion("LOCALNAME is not null");
            return (Criteria) this;
        }

        public Criteria andLocalnameEqualTo(String value) {
            addCriterion("LOCALNAME =", value, "localname");
            return (Criteria) this;
        }

        public Criteria andLocalnameNotEqualTo(String value) {
            addCriterion("LOCALNAME <>", value, "localname");
            return (Criteria) this;
        }

        public Criteria andLocalnameGreaterThan(String value) {
            addCriterion("LOCALNAME >", value, "localname");
            return (Criteria) this;
        }

        public Criteria andLocalnameGreaterThanOrEqualTo(String value) {
            addCriterion("LOCALNAME >=", value, "localname");
            return (Criteria) this;
        }

        public Criteria andLocalnameLessThan(String value) {
            addCriterion("LOCALNAME <", value, "localname");
            return (Criteria) this;
        }

        public Criteria andLocalnameLessThanOrEqualTo(String value) {
            addCriterion("LOCALNAME <=", value, "localname");
            return (Criteria) this;
        }

        public Criteria andLocalnameLike(String value) {
            addCriterion("LOCALNAME like", value, "localname");
            return (Criteria) this;
        }

        public Criteria andLocalnameNotLike(String value) {
            addCriterion("LOCALNAME not like", value, "localname");
            return (Criteria) this;
        }

        public Criteria andLocalnameIn(List<String> values) {
            addCriterion("LOCALNAME in", values, "localname");
            return (Criteria) this;
        }

        public Criteria andLocalnameNotIn(List<String> values) {
            addCriterion("LOCALNAME not in", values, "localname");
            return (Criteria) this;
        }

        public Criteria andLocalnameBetween(String value1, String value2) {
            addCriterion("LOCALNAME between", value1, value2, "localname");
            return (Criteria) this;
        }

        public Criteria andLocalnameNotBetween(String value1, String value2) {
            addCriterion("LOCALNAME not between", value1, value2, "localname");
            return (Criteria) this;
        }

        public Criteria andGovernmentformIsNull() {
            addCriterion("GOVERNMENTFORM is null");
            return (Criteria) this;
        }

        public Criteria andGovernmentformIsNotNull() {
            addCriterion("GOVERNMENTFORM is not null");
            return (Criteria) this;
        }

        public Criteria andGovernmentformEqualTo(String value) {
            addCriterion("GOVERNMENTFORM =", value, "governmentform");
            return (Criteria) this;
        }

        public Criteria andGovernmentformNotEqualTo(String value) {
            addCriterion("GOVERNMENTFORM <>", value, "governmentform");
            return (Criteria) this;
        }

        public Criteria andGovernmentformGreaterThan(String value) {
            addCriterion("GOVERNMENTFORM >", value, "governmentform");
            return (Criteria) this;
        }

        public Criteria andGovernmentformGreaterThanOrEqualTo(String value) {
            addCriterion("GOVERNMENTFORM >=", value, "governmentform");
            return (Criteria) this;
        }

        public Criteria andGovernmentformLessThan(String value) {
            addCriterion("GOVERNMENTFORM <", value, "governmentform");
            return (Criteria) this;
        }

        public Criteria andGovernmentformLessThanOrEqualTo(String value) {
            addCriterion("GOVERNMENTFORM <=", value, "governmentform");
            return (Criteria) this;
        }

        public Criteria andGovernmentformLike(String value) {
            addCriterion("GOVERNMENTFORM like", value, "governmentform");
            return (Criteria) this;
        }

        public Criteria andGovernmentformNotLike(String value) {
            addCriterion("GOVERNMENTFORM not like", value, "governmentform");
            return (Criteria) this;
        }

        public Criteria andGovernmentformIn(List<String> values) {
            addCriterion("GOVERNMENTFORM in", values, "governmentform");
            return (Criteria) this;
        }

        public Criteria andGovernmentformNotIn(List<String> values) {
            addCriterion("GOVERNMENTFORM not in", values, "governmentform");
            return (Criteria) this;
        }

        public Criteria andGovernmentformBetween(String value1, String value2) {
            addCriterion("GOVERNMENTFORM between", value1, value2, "governmentform");
            return (Criteria) this;
        }

        public Criteria andGovernmentformNotBetween(String value1, String value2) {
            addCriterion("GOVERNMENTFORM not between", value1, value2, "governmentform");
            return (Criteria) this;
        }

        public Criteria andHeadofstateIsNull() {
            addCriterion("HEADOFSTATE is null");
            return (Criteria) this;
        }

        public Criteria andHeadofstateIsNotNull() {
            addCriterion("HEADOFSTATE is not null");
            return (Criteria) this;
        }

        public Criteria andHeadofstateEqualTo(String value) {
            addCriterion("HEADOFSTATE =", value, "headofstate");
            return (Criteria) this;
        }

        public Criteria andHeadofstateNotEqualTo(String value) {
            addCriterion("HEADOFSTATE <>", value, "headofstate");
            return (Criteria) this;
        }

        public Criteria andHeadofstateGreaterThan(String value) {
            addCriterion("HEADOFSTATE >", value, "headofstate");
            return (Criteria) this;
        }

        public Criteria andHeadofstateGreaterThanOrEqualTo(String value) {
            addCriterion("HEADOFSTATE >=", value, "headofstate");
            return (Criteria) this;
        }

        public Criteria andHeadofstateLessThan(String value) {
            addCriterion("HEADOFSTATE <", value, "headofstate");
            return (Criteria) this;
        }

        public Criteria andHeadofstateLessThanOrEqualTo(String value) {
            addCriterion("HEADOFSTATE <=", value, "headofstate");
            return (Criteria) this;
        }

        public Criteria andHeadofstateLike(String value) {
            addCriterion("HEADOFSTATE like", value, "headofstate");
            return (Criteria) this;
        }

        public Criteria andHeadofstateNotLike(String value) {
            addCriterion("HEADOFSTATE not like", value, "headofstate");
            return (Criteria) this;
        }

        public Criteria andHeadofstateIn(List<String> values) {
            addCriterion("HEADOFSTATE in", values, "headofstate");
            return (Criteria) this;
        }

        public Criteria andHeadofstateNotIn(List<String> values) {
            addCriterion("HEADOFSTATE not in", values, "headofstate");
            return (Criteria) this;
        }

        public Criteria andHeadofstateBetween(String value1, String value2) {
            addCriterion("HEADOFSTATE between", value1, value2, "headofstate");
            return (Criteria) this;
        }

        public Criteria andHeadofstateNotBetween(String value1, String value2) {
            addCriterion("HEADOFSTATE not between", value1, value2, "headofstate");
            return (Criteria) this;
        }

        public Criteria andCapitalIsNull() {
            addCriterion("CAPITAL is null");
            return (Criteria) this;
        }

        public Criteria andCapitalIsNotNull() {
            addCriterion("CAPITAL is not null");
            return (Criteria) this;
        }

        public Criteria andCapitalEqualTo(Integer value) {
            addCriterion("CAPITAL =", value, "capital");
            return (Criteria) this;
        }

        public Criteria andCapitalNotEqualTo(Integer value) {
            addCriterion("CAPITAL <>", value, "capital");
            return (Criteria) this;
        }

        public Criteria andCapitalGreaterThan(Integer value) {
            addCriterion("CAPITAL >", value, "capital");
            return (Criteria) this;
        }

        public Criteria andCapitalGreaterThanOrEqualTo(Integer value) {
            addCriterion("CAPITAL >=", value, "capital");
            return (Criteria) this;
        }

        public Criteria andCapitalLessThan(Integer value) {
            addCriterion("CAPITAL <", value, "capital");
            return (Criteria) this;
        }

        public Criteria andCapitalLessThanOrEqualTo(Integer value) {
            addCriterion("CAPITAL <=", value, "capital");
            return (Criteria) this;
        }

        public Criteria andCapitalIn(List<Integer> values) {
            addCriterion("CAPITAL in", values, "capital");
            return (Criteria) this;
        }

        public Criteria andCapitalNotIn(List<Integer> values) {
            addCriterion("CAPITAL not in", values, "capital");
            return (Criteria) this;
        }

        public Criteria andCapitalBetween(Integer value1, Integer value2) {
            addCriterion("CAPITAL between", value1, value2, "capital");
            return (Criteria) this;
        }

        public Criteria andCapitalNotBetween(Integer value1, Integer value2) {
            addCriterion("CAPITAL not between", value1, value2, "capital");
            return (Criteria) this;
        }

        public Criteria andCode2IsNull() {
            addCriterion("CODE2 is null");
            return (Criteria) this;
        }

        public Criteria andCode2IsNotNull() {
            addCriterion("CODE2 is not null");
            return (Criteria) this;
        }

        public Criteria andCode2EqualTo(String value) {
            addCriterion("CODE2 =", value, "code2");
            return (Criteria) this;
        }

        public Criteria andCode2NotEqualTo(String value) {
            addCriterion("CODE2 <>", value, "code2");
            return (Criteria) this;
        }

        public Criteria andCode2GreaterThan(String value) {
            addCriterion("CODE2 >", value, "code2");
            return (Criteria) this;
        }

        public Criteria andCode2GreaterThanOrEqualTo(String value) {
            addCriterion("CODE2 >=", value, "code2");
            return (Criteria) this;
        }

        public Criteria andCode2LessThan(String value) {
            addCriterion("CODE2 <", value, "code2");
            return (Criteria) this;
        }

        public Criteria andCode2LessThanOrEqualTo(String value) {
            addCriterion("CODE2 <=", value, "code2");
            return (Criteria) this;
        }

        public Criteria andCode2Like(String value) {
            addCriterion("CODE2 like", value, "code2");
            return (Criteria) this;
        }

        public Criteria andCode2NotLike(String value) {
            addCriterion("CODE2 not like", value, "code2");
            return (Criteria) this;
        }

        public Criteria andCode2In(List<String> values) {
            addCriterion("CODE2 in", values, "code2");
            return (Criteria) this;
        }

        public Criteria andCode2NotIn(List<String> values) {
            addCriterion("CODE2 not in", values, "code2");
            return (Criteria) this;
        }

        public Criteria andCode2Between(String value1, String value2) {
            addCriterion("CODE2 between", value1, value2, "code2");
            return (Criteria) this;
        }

        public Criteria andCode2NotBetween(String value1, String value2) {
            addCriterion("CODE2 not between", value1, value2, "code2");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table COUNTRY
     *
     * @mbg.generated do_not_delete_during_merge Tue Apr 11 18:53:02 CST 2017
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table COUNTRY
     *
     * @mbg.generated Tue Apr 11 18:53:02 CST 2017
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}